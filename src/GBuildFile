if(argc == 2) {
	if(arg1 == "clean") {
		$"rm -f ../env/KRONOS.BIN";
		$"rm -f ../bin/*.o";

		#exit(0);
	}

	$"echo \"Can't recognize argument " + arg1 + "\"" &;
	#exit(1);
}

let cc      = "clang";
let ld      = "clang";
let as      = "nasm";

let cflags  = "-Wall -Wextra -Wno-unused -O3 -IInclude -pipe " +
              "-ffreestanding -fno-stack-protector -fno-pic "  +
              "-mno-80387 -mno-mmx -mno-3dnow -mno-sse "       +
              "-mno-sse2 -mno-red-zone -mcmodel=kernel "       +
              "--target=x86_64-none-none "                     ;

let ldflags = "-TLinker.ld -nostdlib -z max-page-size=0x1000 " +
              "-static --target=x86_64-none-none ";

let asflags = "-felf64 ";


let status  = 0;
let start   = uptime();

#foreach_line("./KConfig")
{
	if(line[0] == "D") {
		cflags = cflags + "-D" + cut(line, 1, 0) + " ";
	}
}

#foreach("c")
{
	let src = dir + "/" + file;
	let obj = "../bin/" + cut(file, 0, 2) + hexof(hashof(src)) + ".o";

	status = status + ($cc + " " + cflags + "-c " + src + " -o " + obj);

	$"echo " &;
}

#foreach("asm")
{
	let src = dir + "/" + file;
	let obj = "../bin/" + cut(file, 0, 4) + hexof(hashof(src)) + ".o";

	status = status + ($as + " " + asflags + src + " -o " + obj);

	$"echo " &;
}

if(status > 0) {
	$"echo Compilation failed." &;
	#exit(1);
}

status = ($ld + " " + ldflags + " ../bin/*.o -o ../env/KRONOS.BIN");

if(status > 0) {
	$"echo Linkage failed." &;
	#exit(1);
}

$"echo \"Compilation successful. (" + (uptime() - start) + "s)\"" &;
